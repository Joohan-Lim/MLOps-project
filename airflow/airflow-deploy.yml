---
apiVersion: v1
kind: Namespace
metadata:
  name: airflow

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-web
  namespace: airflow
  labels:
    app: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  template:
    metadata:
      labels:
        app: airflow
    spec:
      containers:
        - name: airflow-webserver
          image: apache/airflow:2.3.0
          args: ["webserver"]
          ports:
            - containerPort: 8080
          env:
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: "False"
            - name: AIRFLOW__WEBSERVER__EXPOSE_CONFIG
              value: "True"
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              value: "sqlite:////usr/local/airflow/airflow.db"
            - name: AIRFLOW__CORE__EXECUTOR
              value: "SequentialExecutor"
          volumeMounts:
            - name: airflow-config
              mountPath: /usr/local/airflow/airflow.cfg
              subPath: airflow.cfg
      volumes:
        - name: airflow-config
          configMap:
            name: airflow-config

---
apiVersion: v1
kind: Service
metadata:
  name: airflow-web-service
  namespace: airflow
  labels:
    app: airflow
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: airflow

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
  namespace: airflow
  labels:
    app: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  template:
    metadata:
      labels:
        app: airflow
    spec:
      containers:
        - name: airflow-scheduler
          image: apache/airflow:2.3.0
          args: ["scheduler"]
          env:
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              value: "sqlite:////usr/local/airflow/airflow.db"
            - name: AIRFLOW__CORE__EXECUTOR
              value: "SequentialExecutor"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-pvc
  namespace: airflow
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-config
  namespace: airflow
data:
  airflow.cfg: |
    [core]
    dags_folder = /usr/local/airflow/dags
    base_log_folder = /usr/local/airflow/logs
    executor = SequentialExecutor
    sql_alchemy_conn = sqlite:////usr/local/airflow/airflow.db
    load_examples = False

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: airflow-ingress
  namespace: airflow
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: airflow-web-service
                port:
                  number: 8080